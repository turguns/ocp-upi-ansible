---
- name: Configure Network Services
  hosts: utility
  gather_facts: true
  become: yes
  vars_files:
  - default_vars.yaml

  tasks:
  - name: Update /etc/ethers file
    template:
      src: templates/ethers.j2
      dest: /etc/ethers

  - name: Update /etc/hosts file
    template:
      src: templates/hosts.j2
      dest: /etc/hosts

  - name: Configure Dnsmasq
    template:
      src: templates/dnsmasq.conf.j2
      dest: /etc/dnsmasq.conf

  - name: Configure HAProxy
    include_tasks: configure_haproxy.yaml

  - name : Restart dnsmasq
    service:
      name: dnsmasq
      state: restarted
      enabled: yes

- name: Ensure haproxy container is running
  hosts: utility
  gather_facts: true
  become: yes
  vars_files:
  - default_vars.yaml
  vars:
    container_state: running
    container_name: haproxy
    container_image: "{{ haproxy_image }}"
    container_dir_config: /etc/haproxy
    container_run_args: >-
      --net host
      --user root
      -v "{{container_dir_config}}:{{container_dir_config}}:Z"
      --hostname={{ ansible_fqdn }}
  tasks:
  - name: Ensure container state
    import_role:
      name: ikke_t.podman_container_systemd

- name: Ensure httpd container is running
  hosts: utility
  gather_facts: true
  become: yes
  vars_files:
  - default_vars.yaml
  vars:
    container_state: running
    container_name: httpd
    container_image: "{{ httpd_image }}"
    container_dir_data: /var/www
    container_run_args: >-
      --net host
      -v "{{container_dir_data}}:{{container_dir_data}}:Z"
      --hostname={{ ansible_fqdn }}
  tasks:
  - name: Ensure httpd document root exists
    file:
      path: "/var/www/html/ignitions"
      state: directory
      recurse: yes
      mode: 0755
      
  - name: Ensure container state
    import_role:
      name: ikke_t.podman_container_systemd

